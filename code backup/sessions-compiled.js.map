{"version":3,"sources":["sessions.js"],"names":[],"mappings":";;;AAGA;;AAGA,MAAM,WAAW,EAAjB;;AAEA,MAAM,sBAAsB,UAAS,IAAT,EAAgB;;AAExC,QAAI,SAAJ;;AAEA,WAAO,IAAP,CAAY,QAAZ,EAAsB,OAAtB,CAA8B,UAAU,CAAV,EAAa;AACvC,YAAI,SAAS,CAAT,EAAY,IAAZ,KAAqB,IAAzB,EAA+B;;AAE3B,wBAAY,CAAZ;AACH;AACJ,KALD;AAMA,QAAI,CAAC,SAAL,EAAgB;;AAEZ,gBAAQ,GAAR,CAAY,iBAAZ;;AAEA,oBAAY,IAAI,IAAJ,GAAW,WAAX,EAAZ;AACA,iBAAS,SAAT,IAAsB;AAClB,kBAAM,IADY;AAElB,qBAAS;AAFS,SAAtB,C;AAKH;AACD,WAAO,SAAP;AACH,CAtBD;;AAwBA,MAAM,WAAW,UAAS,SAAT,EAAmB;AAChC,QAAI,SAAS,SAAT,KAAuB,SAA3B,EAAuC,OAAO,SAAP;AACvC,WAAO,SAAS,SAAT,EAAoB,IAA3B;AACH,CAHD;;AAKA,MAAM,aAAa,UAAS,SAAT,EAAmB;AAClC,WAAO,SAAS,SAAT,EAAoB,OAA3B;AACH,CAFD;;AAIA,MAAM,eAAe,UAAS,SAAT,EAAmB,OAAnB,EAA2B;AAC5C,aAAS,SAAT,EAAoB,SAApB,IAAiC,OAAjC;AACH,CAFD;;AAIA,MAAM,uBAAuB,UAAS,SAAT,EAAmB,QAAnB,EAA8B;;AAEvD,YAAQ,GAAR,CAAY,iBAAZ;AACA,aAAS,SAAT,IAAsB;AAClB,mBAAW,SADO;AAElB,kBAAW,QAFO;AAGlB,iBAAS;AAHS,KAAtB;AAMH,CATD;;AAWA,MAAM,yBAAyB,UAAS,cAAT,EAAwB;;AAEnD,QAAI,SAAJ;AACA,WAAO,IAAP,CAAY,QAAZ,EAAsB,OAAtB,CAA8B,UAAU,CAAV,EAAa;AACvC,YAAI,SAAS,CAAT,EAAY,SAAZ,KAA0B,cAA9B,EAA8C;;AAE1C,wBAAY,CAAZ;AACH;AACJ,KALD;;AAOA,QAAG,SAAH,EACI,OAAO,IAAP,CADJ,KAGE,OAAO,KAAP;AAEL,CAfD;;AAiBA,OAAO,OAAP,GAAiB;AACb,yBAAoB,mBADP;AAEb,cAAS,QAFI;AAGb,gBAAa,UAHA;AAIb,kBAAe,YAJF;AAKb,0BAAqB,oBALR;AAMb,4BAAuB;AANV,CAAjB","file":"sessions-compiled.js","sourcesContent":["/**\r\n * Created by TARUN on 25-May-16.\r\n */\r\n'use strict';\r\n\r\n\r\nconst sessions = {};\r\n\r\nconst findOrCreateSession = function(fbid)  {\r\n\r\n    let sessionId;\r\n    // Let's see if we already have a session for the user fbid\r\n    Object.keys(sessions).forEach(function (k) {\r\n        if (sessions[k].fbid === fbid) {\r\n            // Yep, got it!\r\n            sessionId = k;\r\n        }\r\n    });\r\n    if (!sessionId) {\r\n\r\n        console.log(\"session created\");\r\n        // No session found for user fbid, let's create a new one\r\n        sessionId = new Date().toISOString();\r\n        sessions[sessionId] = {\r\n            fbid: fbid,\r\n            context: {\r\n            }\r\n        }; // set context, _fid_\r\n    }\r\n    return sessionId;\r\n};\r\n\r\nconst findFBid = function(sessionId){\r\n    if( sessions[sessionId] == undefined ) return sessionId;\r\n    return sessions[sessionId].fbid;\r\n};\r\n\r\nconst getContext = function(sessionId){\r\n    return sessions[sessionId].context;\r\n};\r\n\r\nconst storeContext = function(sessionId,context){\r\n    sessions[sessionId][\"context\"] = context;\r\n};\r\n\r\nconst CreateSessionAndroid = function(sessionId,deviceId)  {\r\n\r\n    console.log(\"session created\");\r\n    sessions[sessionId] = {\r\n        sessionId: sessionId,\r\n        deviceId : deviceId,\r\n        context: {\r\n        }\r\n    };\r\n};\r\n\r\nconst isAndroidSessionExists = function(checkSessionId){\r\n\r\n    let sessionId;\r\n    Object.keys(sessions).forEach(function (k) {\r\n        if (sessions[k].sessionId === checkSessionId) {\r\n            // Yep, got it!\r\n            sessionId = k;\r\n        }\r\n    });\r\n\r\n    if(sessionId)\r\n        return true;\r\n    else\r\n      return false\r\n\r\n};\r\n\r\nmodule.exports = {\r\n    findOrCreateSession:findOrCreateSession,\r\n    findFBid:findFBid,\r\n    getContext : getContext,\r\n    storeContext : storeContext,\r\n    CreateSessionAndroid:CreateSessionAndroid,\r\n    isAndroidSessionExists:isAndroidSessionExists\r\n};"]}