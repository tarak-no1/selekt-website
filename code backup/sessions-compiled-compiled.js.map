{"version":3,"sources":["sessions-compiled.js"],"names":[],"mappings":";;;AAGA;;AAEA,MAAM,WAAW,EAAjB;;AAEA,MAAM,sBAAsB,UAAU,IAAV,EAAgB;;AAExC,QAAI,SAAJ;;AAEA,WAAO,IAAP,CAAY,QAAZ,EAAsB,OAAtB,CAA8B,UAAU,CAAV,EAAa;AACvC,YAAI,SAAS,CAAT,EAAY,IAAZ,KAAqB,IAAzB,EAA+B;;AAE3B,wBAAY,CAAZ;AACH;AACJ,KALD;AAMA,QAAI,CAAC,SAAL,EAAgB;;AAEZ,gBAAQ,GAAR,CAAY,iBAAZ;;AAEA,oBAAY,IAAI,IAAJ,GAAW,WAAX,EAAZ;AACA,iBAAS,SAAT,IAAsB;AAClB,kBAAM,IADY;AAElB,qBAAS;AAFS,SAAtB,C;AAIH;AACD,WAAO,SAAP;AACH,CArBD;;AAuBA,MAAM,WAAW,UAAU,SAAV,EAAqB;;AAElC,QAAI,SAAS,SAAT,KAAuB,SAA3B,EAAsC,OAAO,SAAP;;AAEtC,WAAO,SAAS,SAAT,EAAoB,IAA3B;AACH,CALD;AAMA,MAAM,aAAa,UAAU,SAAV,EAAqB;AACpC,WAAO,SAAS,SAAT,EAAoB,OAA3B;AACH,CAFD;AAGA,MAAM,eAAe,UAAU,SAAV,EAAqB,OAArB,EAA8B;AAC/C,aAAS,SAAT,EAAoB,SAApB,IAAiC,OAAjC;AACH,CAFD;;AAIA,MAAM,uBAAuB,UAAU,SAAV,EAAqB,QAArB,EAA+B;;AAExD,YAAQ,GAAR,CAAY,iBAAZ;AACA,aAAS,SAAT,IAAsB;AAClB,mBAAW,SADO;AAElB,kBAAU,QAFQ;AAGlB,iBAAS;AAHS,KAAtB;AAKH,CARD;;AAUA,MAAM,yBAAyB,UAAU,cAAV,EAA0B;;AAErD,QAAI,SAAJ;AACA,WAAO,IAAP,CAAY,QAAZ,EAAsB,OAAtB,CAA8B,UAAU,CAAV,EAAa;AACvC,YAAI,SAAS,CAAT,EAAY,SAAZ,KAA0B,cAA9B,EAA8C;;AAE1C,wBAAY,CAAZ;AACH;AACJ,KALD;;AAOA,QAAI,SAAJ,EAAe,OAAO,IAAP,CAAf,KAAgC,OAAO,KAAP;AACnC,CAXD;AAYA,OAAO,OAAP,GAAiB;AACb,yBAAqB,mBADR;AAEb,cAAU,QAFG;AAGb,gBAAY,UAHC;AAIb,kBAAc,YAJD;AAKb,0BAAsB,oBALT;AAMb,4BAAwB;AANX,CAAjB","file":"sessions-compiled-compiled.js","sourcesContent":["/**\r\n * Created by TARUN on 25-May-16.\r\n */\n'use strict';\n\nconst sessions = {};\n\nconst findOrCreateSession = function (fbid) {\n\n    let sessionId;\n    // Let's see if we already have a session for the user fbid\n    Object.keys(sessions).forEach(function (k) {\n        if (sessions[k].fbid === fbid) {\n            // Yep, got it!\n            sessionId = k;\n        }\n    });\n    if (!sessionId) {\n\n        console.log(\"session created\");\n        // No session found for user fbid, let's create a new one\n        sessionId = new Date().toISOString();\n        sessions[sessionId] = {\n            fbid: fbid,\n            context: {}\n        }; // set context, _fid_\n    }\n    return sessionId;\n};\n\nconst findFBid = function (sessionId) {\n\n    if (sessions[sessionId] == undefined) return sessionId;\n\n    return sessions[sessionId].fbid;\n};\nconst getContext = function (sessionId) {\n    return sessions[sessionId].context;\n};\nconst storeContext = function (sessionId, context) {\n    sessions[sessionId][\"context\"] = context;\n};\n\nconst CreateSessionAndroid = function (sessionId, deviceId) {\n\n    console.log(\"session created\");\n    sessions[sessionId] = {\n        sessionId: sessionId,\n        deviceId: deviceId,\n        context: {}\n    };\n};\n\nconst isAndroidSessionExists = function (checkSessionId) {\n\n    let sessionId;\n    Object.keys(sessions).forEach(function (k) {\n        if (sessions[k].sessionId === checkSessionId) {\n            // Yep, got it!\n            sessionId = k;\n        }\n    });\n\n    if (sessionId) return true;else return false;\n};\nmodule.exports = {\n    findOrCreateSession: findOrCreateSession,\n    findFBid: findFBid,\n    getContext: getContext,\n    storeContext: storeContext,\n    CreateSessionAndroid: CreateSessionAndroid,\n    isAndroidSessionExists: isAndroidSessionExists\n};\n\n//# sourceMappingURL=sessions-compiled.js.map"]}