{"version":3,"sources":["indexAndroid.js"],"names":[],"mappings":"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","file":"indexAndroid-compiled.js","sourcesContent":["'use strict';\r\n\r\nconst bodyParser = require('body-parser');\r\nconst express = require('express');\r\nvar moment=require('moment');\r\n\r\n// get Bot, const, and Facebook API\r\n\r\nconst Helper = require('./helper.js');\r\nconst bot = require('./bot.js');\r\nconst Sessions = require('./sessions.js');\r\nconst Spell = require('./request.js');\r\nconst lContext =  require('./localContexts.js');\r\nconst global = require('./global.js');\r\nconst Messages = require('./messages.js');\r\nconst Search = require('./logics.js');\r\nconst Mappings = require('./mapping.js');\r\nconst db=require('./pushintodb.js');\r\nconst sentenceParser = require('./cleanSentence');\r\n\r\n\r\n// Setting up our bot\r\n\r\n// Starting our web server and putting it all together\r\nconst app = express();\r\napp.use(bodyParser.json());\r\n\r\nvar server = require('http').createServer(app);\r\nvar port = 8885;\r\n\r\nglobal.io =   require('socket.io')(server);\r\n\r\nserver.listen(port,function() {\r\n  console.log(\"started socket successfully : \" +  \":\" + port);\r\n});\r\n\r\n// index. Let's say something fun\r\napp.get('/', function(req, res) {\r\n  res.send('\"Only those who will risk going too far can possibly find out how far one can go.\" - T.S. Eliot');\r\n});\r\n\r\n\r\nglobal.io.on('connection',function(socket){\r\n  var addedUser = false;\r\n  console.log(\"New socket connection from user \");\r\n//  console.log(\"socket id: \", socket.id);\r\n\r\n  // new   user request from android\r\n  socket.on('add user', function(data){\r\n\r\n    console.log(\"Message on Add User: \" ,data);\r\n    if(addedUser)\r\n      return;\r\n    data = JSON.parse(data);\r\n    var sessionId = data[\"session_id\"];\r\n    var socketId = socket.id;\r\n    var deviceId = data[\"device_id\"];\r\n\r\n    Sessions.CreateSessionAndroid(sessionId,deviceId);\r\n    global.storeUserSocket(sessionId,socket);\r\n    socket.emit('bot login',{sessionCreated:true,sessionId:sessionId});\r\n\r\n  });\r\n\r\n  socket.on('reconnect user', function(data){\r\n\r\n    console.log(\"Message on Reconnect User: \" ,data);\r\n    if(data  == null)\r\n      return;\r\n\r\n    data = JSON.parse(data);\r\n    var sessionId = data[\"session_id\"];\r\n    var deviceId = data[\"device_id\"];\r\n    Sessions.CreateSessionAndroid(sessionId,deviceId);\r\n    global.storeUserSocket(sessionId,socket);\r\n   // socket.emit('bot login',{sessionCreated:true,sessionId:sessionId});\r\n\r\n  });\r\n\r\n  socket.on('dummy list', function(data){\r\n\r\n    console.log(\"Message on dummy list: \" ,data);\r\n\r\n    data = JSON.parse(data);\r\n    var sessionId = data[\"session_id\"];\r\n\r\n    var spec_sort = {\"overall_score\":\"desc\",\"price\":\"asc\"};\r\n    var query = undefined;\r\n    var filter =  {\"and\":[{\"range\":{\"price\":{\"gte\":0,\"lte\":30000}}},{}]};\r\n    var fields = Mappings.getFieldsAttribute(\"skuAndroid\");\r\n\r\n    var sendJson ={};\r\n    Search.findSpecMobile(spec_sort,query,filter,fields, function (data) {\r\n      var phone_list = data.hits.hits;\r\n      console.log(\"length :\" + phone_list.length);\r\n      var list = [];\r\n      for (var i = 0; i < phone_list.length; i++)\r\n        list.push(phone_list[i][\"fields\"]);\r\n      sendJson[\"username\"] = \"prodX\";\r\n      sendJson[\"message\"] =  list;\r\n      sendJson[\"relevant_attribute\"] = [];\r\n      socket.emit(\"bot list\",sendJson);\r\n    });\r\n  });\r\n\r\n  // new message came\r\n  socket.on('user message',function(data){\r\n\r\n    data = JSON.parse(data);\r\n    console.log(\"=============New message received  to bot:============ \" ,data);\r\n    var sessionId = data.sessionId;\r\n    var deviceId = data.deviceId;\r\n    var socketId = socket.id;\r\n    var email = data.email;\r\n\r\n    if(!Sessions.isAndroidSessionExists(sessionId)){\r\n      Sessions.CreateSessionAndroid(sessionId,deviceId);\r\n      global.storeUserSocket(sessionId,socket);\r\n    }\r\n\r\n    var timestamp=moment().format('MMM DD, YYYY,h:mm:ss a');\r\n    timestamp = (new Date).getTime();\r\n\r\n    var details={'session_id':sessionId,'sender':sessionId,'content':data.message,'username':email,timestamp:timestamp};\r\n    db.inserttodB(details,\"chatapp_msg\");\r\n\r\n    var msg = sentenceParser.cleanSentence(data.message, function () {\r\n      bot.witProcessMessage(sessionId, data.message,email,\"android\",{},function(result){\r\n      });\r\n    });\r\n\r\n  });\r\n});\r\n\r\nfunction appendSendJson(key,value,json){\r\n  json[key] = value;\r\n}\r\n"]}